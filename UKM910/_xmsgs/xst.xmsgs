<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Xst" num="1561" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">288</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="warning" file="Xst" num="819" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">249</arg>: One or more signals are missing in the process sensitivity list. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
<arg fmt="%s" index="3">&lt;reset&gt;</arg>
</msg>

<msg type="info" file="Xst" num="1561" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">450</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="info" file="Xst" num="1561" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">473</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="info" file="Xst" num="1561" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">532</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="warning" file="Xst" num="819" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Kishore/Documents/MS/IMTEK/ILIAS/SS 2017/VLSI System Design/Project/code base/UKM910_INTR_HNDL/Control_Unit.vhd</arg>&quot; line <arg fmt="%d" index="2">347</arg>: One or more signals are missing in the process sensitivity list. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
<arg fmt="%s" index="3">&lt;IEN&gt;, &lt;IFLAG&gt;, &lt;opcode&gt;, &lt;PSW&gt;</arg>
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">opcode&lt;3&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">PSW&lt;15:2&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">fnDecoderop&lt;15:7&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_8</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">debug_module_inst</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Mtridata_dataIO_9&gt; &lt;Mtridata_dataIO_10&gt; &lt;Mtridata_dataIO_11&gt; &lt;Mtridata_dataIO_12&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module_inst</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;8&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;9&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;9&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module_inst</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;8&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;10&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;10&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module_inst</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;10&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;11&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;11&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module_inst</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;10&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;12&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;12&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="1426" delta="old" >The value init of the FF/Latch <arg fmt="%s" index="1">FFd54</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">FSM</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">0</arg>.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr8</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr7</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr6</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr5</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr4</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr3</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr2</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">intr1</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module_inst</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="3226" delta="old" >The RAM &lt;<arg fmt="%s" index="1">Mram_data</arg>&gt; will be implemented as a BLOCK RAM, absorbing the following register(s):</msg>

<msg type="warning" file="Xst" num="1426" delta="old" >The value init of the FF/Latch <arg fmt="%s" index="1">FSM_FFd54</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">FSM_0-parent</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">0</arg>.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Mtridata_dataIO_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">debug_module</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;8&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;9&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;9&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;8&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;10&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;10&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;10&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;11&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;11&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="638" delta="old" >in unit <arg fmt="%s" index="1">debug_module</arg> Conflict on KEEP property on signal <arg fmt="%s" index="2">Mtridata_dataIO&lt;10&gt;</arg> and <arg fmt="%s" index="3">Mtridata_dataIO&lt;12&gt;</arg> <arg fmt="%s" index="4">Mtridata_dataIO&lt;12&gt;</arg> signal will be lost.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr1/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr2/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr3/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr4/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr5/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr6/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr7/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">intr8/q</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Interrupt_Logger</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2042" delta="old" >Unit <arg fmt="%s" index="1">debug_module</arg>: <arg fmt="%d" index="2">16</arg> internal tristates are replaced by logic (pull-up <arg fmt="%s" index="3">yes</arg>): </msg>

<msg type="warning" file="Xst" num="2042" delta="old" >Unit <arg fmt="%s" index="1">memory</arg>: <arg fmt="%d" index="2">16</arg> internal tristates are replaced by logic (pull-up <arg fmt="%s" index="3">yes</arg>): </msg>

<msg type="warning" file="Xst" num="2042" delta="old" >Unit <arg fmt="%s" index="1">Buffer_16Bits</arg>: <arg fmt="%d" index="2">16</arg> internal tristates are replaced by logic (pull-up <arg fmt="%s" index="3">yes</arg>): </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2170" delta="old" >Unit <arg fmt="%s" index="1">debug_processor_toplevel</arg> : the following signal(s) form a combinatorial loop: </msg>

</messages>

